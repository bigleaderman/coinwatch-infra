---
# Kafka Persistent Volume 정의
kind: PersistentVolume
apiVersion: v1
metadata:
  name: kafka-data-1
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/kafka-1"
  persistentVolumeReclaimPolicy: Retain
---
# Kafka Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-data-1-claim
  namespace: kafka
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Kafka Headless Service - StatefulSet을 위한 서비스
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: kafka
spec:
  clusterIP: None
  selector:
    app: kafka
  ports:
  - name: internal
    port: 29092
    targetPort: 29092
  - name: controller
    port: 29093
    targetPort: 29093
---
# Kafka External Service - 외부 접근용 서비스
apiVersion: v1
kind: Service
metadata:
  name: kafka-external
  namespace: kafka
spec:
  type: NodePort
  selector:
    app: kafka
  ports:
  - name: external
    port: 9092
    targetPort: 9092
    nodePort: 30092
---
# Kafka StatefulSet - 단일 브로커 실행
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka
spec:
  serviceName: kafka-headless
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      initContainers:
      - name: volume-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /var/lib/kafka/data"]
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.7.0
        securityContext:
          runAsUser: 1000
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        ports:
        - containerPort: 9092
          name: external
        - containerPort: 29092
          name: internal
        - containerPort: 29093
          name: controller
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KAFKA_NODE_ID
          value: "1"
        - name: KAFKA_CLUSTER_ID
          value: "MkU3OEVBNTcwNTJENDM2Qk"
        - name: CLUSTER_ID
          value: "MkU3OEVBNTcwNTJENDM2Qk"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "INTERNAL://kafka-0.kafka-headless.kafka.svc.cluster.local:29092,EXTERNAL://localhost:9092"
        - name: KAFKA_LISTENERS
          value: "INTERNAL://:29092,CONTROLLER://:29093,EXTERNAL://0.0.0.0:9092"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "INTERNAL"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "1@kafka-0.kafka-headless:29093"
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_LOG_DIRS
          value: "/var/lib/kafka/data"
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: kafka-data-1-claim